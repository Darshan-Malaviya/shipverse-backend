"""
Django settings for DjangoRestApisPostgreSQL project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import environ
env = environ.Env()
environ.Env.read_env()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6e9z53njv%s$q=(lqg-=t#_r_$qn)!iev$fi53ju^xl#e)o!z$'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'django_crontab',
    # Shipverse application
    'shipverse.apps.ShipverseConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    # 'django.middleware.common.CommonMiddleware',   
    # 'shipverse.middleware.LoggingMiddleware'

]
CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_WHITELIST = (
    'https://localhost:3000',
    'https://checkout.stripe.com'
)
ROOT_URLCONF = 'DjangoRestApisPostgreSQL.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoRestApisPostgreSQL.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
ALLOWED_HOSTS = ["170.187.179.126", "www.app.goshipverse.com", "app.goshipverse.com",
                 "https://app.goshipverse.com", "localhost", "https://www.app.goshipverse.com", "127.0.0.1", ".ngrok-free.app", "*"]
DEBUG = True
Environment = False
if Environment:
    # Development database settings
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': env('DB_NAME'),
            'USER': env('DEBUG_DB_USER'),
            'PASSWORD': env('DEBUG_DB_PASSWORD'),
            'HOST': env('DB_HOST_DEBUG'),
            'PORT': env('DB_PORT'),
        }
    }
    FRONTEND_URL = 'http://localhost:3000'
    BACKEND_URL = 'http://localhost:8080'
    BC_CLIENT_ID = env('bc_client_id_debug')
    BC_CLIENT_SECRET = env('bc_client_secret_debug')
    BC_TOKEN_ENDPOINT = env('bc_token_endpoint')
    BC_REDIRECT_URI = env('bc_redirect_uri_debug')

    UPS_CLIENT_ID = env('ups_client_id_debug')
    UPS_CLIENT_SECRET = env('ups_client_secret_debug')
    SHOPIFY_CLIENT_ID = env('shopify_client_id_debug')
    SHOPIFY_CLIENT_SECRET = env('shopify_client_secret_debug')
    SHOPIFY_REDIRECT_URL = env('shopify_redirect_url_debug')
    UPS_REFRESHTOKEN_ENDPOINT = env('ups_refreshtoken_endpoint_debug')
    STRIPE_API_KEY = env('stripe_api_key_debug')
    STRIPE_PRICE_ID = env('stripe_price_id_debug')
    WEBHOOK_SECRET = env('webhook_secret_debug')

    CANADAPOST_USERNAME = env('canadapost_username_debug')
    CANADAPOST_PASSWORD = env('canadapost_password_debug')
else:
    # Production database settings
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': env('DB_NAME'),
            'USER': env('PRODUCTION_DB_USER'),
            'PASSWORD': env('PRODUCTION_DB_PASSWORD'),
            'HOST': env('DB_HOST'),
            'PORT': env('DB_PORT'),
        }
    }
    FRONTEND_URL = 'https://app.goshipverse.com'
    BACKEND_URL = 'https://app.goshipverse.com'
    BC_CLIENT_ID = env('bc_client_id')
    BC_CLIENT_SECRET = env('bc_client_secret')
    BC_TOKEN_ENDPOINT = env('bc_token_endpoint')
    BC_REDIRECT_URI = env('bc_redirect_uri')

    UPS_CLIENT_ID = env('ups_client_id')
    UPS_CLIENT_SECRET = env('ups_client_secret')
    SHOPIFY_CLIENT_ID = env('shopify_client_id')
    SHOPIFY_CLIENT_SECRET = env('shopify_client_secret')
    SHOPIFY_REDIRECT_URL = env('shopify_redirect_url')
    UPS_REFRESHTOKEN_ENDPOINT = env('ups_refreshtoken_endpoint')
    STRIPE_API_KEY = env('stripe_api_key')
    STRIPE_PRICE_ID = env('stripe_price_id')
    WEBHOOK_SECRET = env('webhook_secret')
    
    CANADAPOST_USERNAME = env('canadapost_username_debug')
    CANADAPOST_PASSWORD = env('canadapost_password_debug')
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler'

}

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'  # mail service smtp
EMAIL_HOST_USER = 'apikey'  # email id
EMAIL_HOST_PASSWORD = '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'  # password
EMAIL_PORT = 587
EMAIL_USE_TLS = False
# EMAIL_USE_SSL = False
# SEND_GRID_APIKEY = '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'

CRONJOBS = [
    ('0 0 * * *', 'shipverse.views.my_cron_job'),
]


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'standard': {
#             'format': '{asctime} {levelname} {message}',
#             'style': '{',
#         },
#     },
#     'handlers': {
#         'normal_log_file': {
#             'level': 'INFO',
#             'class': 'logging.handlers.TimedRotatingFileHandler',
#             'filename': 'logs/normal.log',
#             'when': 'midnight',
#             'backupCount': 7,
#             'formatter': 'standard',
#         },
#         'error_log_file': {
#             'level': 'ERROR',
#             'class': 'logging.handlers.TimedRotatingFileHandler',
#             'filename': 'logs/error.log',
#             'when': 'midnight',
#             'backupCount': 7,
#             'formatter': 'standard',
#         },
#     },
#     'loggers': {
#         '': {
#             'handlers': ['normal_log_file', 'error_log_file'],
#             'level': 'INFO',
#             'propagate': True,
#         },
#     },
# }